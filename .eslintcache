[{"/Users/chrissanchez/Desktop/Road to React/hacker-stories/src/reportWebVitals.js":"1","/Users/chrissanchez/Desktop/Road to React/hacker-stories/src/App.js":"2"},{"size":362,"mtime":1606850048816,"results":"3","hashOfConfig":"4"},{"size":5895,"mtime":1610038109266,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13oaahn",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/chrissanchez/Desktop/Road to React/hacker-stories/src/reportWebVitals.js",[],"/Users/chrissanchez/Desktop/Road to React/hacker-stories/src/App.js",["11"],"import styles from \"./App.module.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { ReactComponent as Check } from \"./check.svg\";\nconst API_ENDPOINT = \"https://hn.algolia.com/api/v1/search?query=\";\nconst StyledLabel = styled.label`\n  border-top: 1px solid #171212;\n  border-left: 1px solid #171212;\n  padding-left: 5px;\n  font-size: 24px;\n`;\n\nconst StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid #171212;\n  background-color: transparent;\n\n  font-size: 24px;\n`;\nconst StyledItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding-bottom: 5px;\n`;\n\nconst StyledSearchForm = styled.form`\n  padding: 10px 0 20px 0;\n  display: flex;\n  align-items: baseline;\n`;\nconst StyledButton = styled.button`\n  background: transparent;\n  border: 1px solid #171212;\n  padding: 5px;\n  cursor: pointer;\n\n  transition: all 0.1s ease-in;\n\n  &:hover {\n    background: #171212;\n    color: #ffffff;\n  }\n`;\nconst StyledButtonSmall = styled(StyledButton)`\n  padding: 5px;\n`;\n\nconst StyledButtonLarge = styled(StyledButton)`\n  padding: 10px;\n`;\nconst StyledColumn = styled.span`\n  padding: 0 5px;\n  white-space: nowrap;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  a {\n    color: inherit;\n  }\n\n  width: ${(props) => props.width};\n`;\nconst StyledContainer = styled.div`\n  height: 100vw;\n  padding: 20px;\n  background: #83a4d4;\n  background: linear-gradient(to left. #b6fbff, #83a4d4);\n  color: #171212;\n`;\nconst StyledHeadLinePrimary = styled.h1`\n  font-size: 48px;\n  font-weight: 300;\n  letter-spacing: 2px;\n`;\nconst useSemiPersistentState = (key, initialState) => {\n  const [value, setValue] = React.useState(\n    localStorage.getItem(key) || initialState\n  );\n  React.useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value, key]);\n  return [value, setValue];\n};\nconst storiesReducer = (state, action) => {\n  switch (action.type) {\n    case \"STORIES_FETCH_INIT\":\n      return { ...state, isLoading: true, isError: false };\n    case \"STORIES_FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case \"STORIES_FETCH_FAILURE\":\n      return { ...state, isLoading: false, isError: true };\n    case \"REMOVE_STORY\":\n      return {\n        ...state,\n        data: state.data.filter(\n          (story) => action.payload.objectID !== story.objectID\n        ),\n      };\n    default:\n      throw new Error();\n  }\n};\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useSemiPersistentState(\"search\", \"React\");\n  const [url, setUrl] = React.useState(`${API_ENDPOINT}${searchTerm}`);\n  const [stories, dispatchStories] = React.useReducer(storiesReducer, {\n    data: [],\n    isLoading: false,\n    isError: false,\n  });\n\n  const handleFetchStories = React.useCallback(async () => {\n    dispatchStories({ type: \"STORIES_FETCH_INIT\" });\n    try {\n      const result = await axios.get(url);\n\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: result.data.hits,\n      });\n    } catch {\n      dispatchStories({ type: \"STORIES_FETCH_FAILURE\" });\n    }\n  }, [url]);\n  React.useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n  const handleRemoveStory = (item) => {\n    dispatchStories({ type: \"REMOVE_STORY\", payload: item });\n  };\n  const handleSearchInput = (e) => {\n    setSearchTerm(e.target.value);\n    // localStorage.setItem(\"search\", e.target.value);\n  };\n\n  const SearchForm = ({\n    searchTerm,\n    onSearchInput,\n    onSearchSubmit,\n    buttonClassName,\n  }) => (\n    <StyledSearchForm onSubmit={onSearchSubmit}>\n      <InputWithLabel\n        className=\"input\"\n        id=\"search\"\n        value={searchTerm}\n        isFocused\n        onInputChange={onSearchInput}\n      >\n        <strong>Search:</strong>\n      </InputWithLabel>\n      <StyledButtonLarge type=\"submit\" disabled={!searchTerm}>\n        Submit\n      </StyledButtonLarge>\n    </StyledSearchForm>\n  );\n  const handleSearchSubmit = (e) => {\n    setUrl(`${API_ENDPOINT}${searchTerm}`);\n    e.preventDefault();\n  };\n  return (\n    <StyledContainer>\n      <StyledHeadLinePrimary>My Hacker Stories</StyledHeadLinePrimary>\n      <SearchForm\n        buttonClassName={styles.buttonLarge}\n        searchTerm={searchTerm}\n        onSearchInput={handleSearchInput}\n        onSearchSubmit={handleSearchSubmit}\n      />\n      <hr />\n      {stories.isError && <p> Something went wrong...</p>}\n      {stories.isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <List list={stories.data} onRemoveItem={handleRemoveStory} />\n      )}\n    </StyledContainer>\n  );\n};\nconst List = ({ list, onRemoveItem }) =>\n  list.map((item) => (\n    <Item key={item.objectID} item={item} onRemoveItem={onRemoveItem} />\n  ));\n\nconst Item = ({ item, onRemoveItem }) => (\n  <StyledItem>\n    <StyledColumn width=\"40%\">\n      <a href={item.url}>{item.title}</a>\n    </StyledColumn>\n    <StyledColumn width=\"30%\">{item.author}</StyledColumn>\n    <StyledColumn width=\"10%\">{item.num_comments}</StyledColumn>\n    <StyledColumn width=\"10%\">{item.points}</StyledColumn>\n    <StyledColumn width=\"10%\">\n      <button type=\"button\" onClick={() => onRemoveItem(item)}>\n        <Check height=\"18px\" width=\"18px\" />\n      </button>\n    </StyledColumn>\n  </StyledItem>\n);\n\nconst InputWithLabel = ({\n  id,\n  label,\n  value,\n  onInputChange,\n  type = \"text\",\n  isFocused,\n  children,\n}) => {\n  const inputRef = React.useRef();\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isFocused]);\n  return (\n    <>\n      <StyledLabel htmlFor={id}>{children}</StyledLabel>\n      <StyledInput\n        ref={inputRef}\n        id={id}\n        type={type}\n        value={value}\n        onChange={onInputChange}\n        className={styles.input}\n      />\n    </>\n  );\n};\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":45,"column":7,"nodeType":"14","messageId":"15","endLine":45,"endColumn":24},"no-unused-vars","'StyledButtonSmall' is assigned a value but never used.","Identifier","unusedVar"]